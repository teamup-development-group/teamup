var exec = require('child_process').exec;

exports.printHelp = function() {
  console.error('\nSyntax: mup <action> [--<parameter>]');
  console.error('');
  console.error('\nValid Actions (mandatory)');
  console.error('---------------------------');
  console.error('init                   - Initialize a Meteor Up project');
  console.error('setup                  - Setup the server');
  console.error('');
  console.error('deploy                 - Deploy app to server');
  console.error('reconfig               - Reconfigure the server and restart');
  console.error('');
  console.error('logs [-f --tail=all]   - Access logs');
  console.error('');
  console.error('start                  - Start your app instances');
  console.error('stop                   - Stop your app instances');
  console.error('restart                - Restart your app instances');
  console.error('\nMongo Database Backup/Restore: (Local <-> first Docker mongod)');
  console.error('           Optionally set any existing mongodump/mongorestore options,');
  console.error('           but --out will be a Local Directory ONLY, not the filename.');
  console.error('           and --oplog only works if it is configured for the database.');
  console.error('mongoDump | md | dump - Backup docker Mongo Database to local folder');
  console.error('mongoRestore | mr | restore - Restore docker Mongo Database from local folder');
  console.error('           --noCleanup (default false) and --noDrop (mupx default is to override mongo default and add drop))');
  console.error('           These options are explained more in the readme but self-explanatory.');
  console.error('mongoUnlock | mu - Unlock Mongo via local file /var/lib/mongodb/mongod.lock');
  console.error('mongoUnlockRemote | murt - Unlock Mongo via remote file /data/db/mongod.lock ');
  console.error('           If a newly Setup mongo container sees a previous lock it is unattachable,');
  console.error('           as its restarting repeatedly.');
  console.error('\nAvailable Parameters (optional)');
  console.error('---------------------------------');
  console.error('--config=mup-prod.json - Specify the deployment configuration');
  console.error('                         Default value: mup.json');
  console.error('--settings=file.json   - Specify the Meteor.settings file');
  console.error('                         Default value: settings.json');
};
